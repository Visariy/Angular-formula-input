import {Injectable} from '@angular/core';
import { autocompleteData } from "../../types/datatypes";


@Injectable({
  providedIn: 'root'
})
export class SymbolService {

  private doubleOperators: autocompleteData = [
    {name: '<>', message: '(Не равно) Возвращает значение "Истина", если 1-й операнд не равен 2-му, в противном случае возвращает значение "Ложь"'},
    {name: '<=', message: '(Меньше или равно) Возвращает значение "Истина", если 1-й операнд меньше или равен 2-му, в противном случае возвращает значение "Ложь"'},
    {name: '>=', message: '(Больше или равно) Возвращает значение "Истина", если 1-й операнд больше или равен 2-му, в противном случае возвращает значение "Ложь'},
    {name: '&&', message: '(Логическое "И) Возвращает значение "Истина" или "Ложь" в соответствии с правилом "И". При этом первый и второй операнд должны быть булевыми (принимать значение "Ложь" или "Истина"'},
    {name: '||', message: '(Логическое "ИЛИ) Возвращает значение "Истина" или "Ложь" в соответствии с правилом "ИЛИ". При этом первый и второй операнд должны быть булевыми (принимать значение "Ложь" или "Истина"'},
    {name: '!=', message: '(Не равно) Возвращает значение "Истина", если 1-й операнд не равен 2-му, в противном случае возвращает значение "Ложь"'},
  ]

  private operators : autocompleteData = [
    {name: '+', message: '(Оператор сложения) Возвращает результат сложения 1-го операнда из 2-го'},
    {name: '-', message: '(Оператор вычитания) Возвращает результат вычитания 2-го операнда из 1-го'},
    {name: '*', message: '(Оператор умножения) Возвращает результат умножения 1-го операнда на 2-й'},
    {name: '/', message: '(Оператор деления) Возвращает результат деления 1-го операнда на 2-й'},
    {name: '%', message: '(Оператор остатка по модулю) Возвращает остаток от деления 1-го операнда на 2-й'},
    {name: '^', message: '(Оператор возведения в степень) Возвращает результат возведения 1-го операнда в степень 2-го'},
    {name: '=', message: '(Равно) Возвращает значение "Истина", если 1-й операнд равен 2-му, в противном случае возвращает значение "Ложь"'},
    {name: '<', message: '(Меньше, чем) Возвращает значение "Истина", если 1-й операнд меньше 2-го, в противном случае возвращает значение "Ложь"'},
    {name: '>', message: '(Больше, чем) Возвращает значение "Истина", если 1-й операнд больше 2-го, в противном случае возвращает значение "Ложь"'},
  ]


  private mathMethodsAndConstants: autocompleteData = [
    {name: 'NOT()', message: 'Логическое отрицание, 1 (означает истину), если выражение не равно нулю'},
    {name: 'IF()', message: 'Возвращает одно значение, если условие оценивается как истинное, или другое, если оно оценивается как ложное'},
    {name: 'R()', message: 'Производит случайное число от 0 до 1'},
    {name: 'MIN()', message: 'Возвращает наименьшее из заданных выражений'},
    {name: 'MAX()', message: 'Возвращает наибольшее из заданных выражений'},
    {name: 'ABS()', message: 'Возвращает абсолютное (неотрицательное) значение выражения'},
    {name: 'ROUND()', message: 'Округляет значение до определенного количества цифр, использует текущий режим округления'},
    {name: 'FLOOR()', message: 'Округляет значение до ближайшего целого числа в меньшую сторону'},
    {name: 'CEILING()', message: 'Округляет значение до ближайшего целого числа в большую сторону'},
    {name: 'LOG()', message: 'Возвращает натуральный логарифм (по основанию «e») выражения'},
    {name: 'LOG10()', message: 'Возвращает десятичный логарифм (по основанию «10») выражения'},
    {name: 'SQRT()', message: 'Возвращает квадратный корень из выражения'},
    {name: 'SINR()', message: 'Возвращает тригонометрический синус угла (в радианах)'},
    {name: 'COSR()', message: 'Возвращает тригонометрический косинус угла (в радианах)'},
    {name: 'TANR()', message: 'Возвращает тригонометрический тангенс угла (в радианах)'},
    {name: 'COTR()', message: 'Возвращает тригонометрический тангенс угла (в радианах)'},
    {name: 'SECR()', message: 'Возвращает секанс (в радианах)'},
    {name: 'CSCR()', message: 'Возвращает косеканс (в радианах)'},
    {name: 'ASINR()', message: 'Возвращает значение арксинуса (в радианах)'},
    {name: 'ACOSR()', message: 'Возвращает значение арккосинуса (в радианах)'},
    {name: 'ATANR()', message: 'Возвращает арктангенса (в радианах)'},
    {name: 'ACOTR()', message: 'Возвращает лавное значение арккотангенса, или обратного котангенса, числа (в радианах)'},
    {name: 'ATAN2R()', message: 'Возвращает арктангенс для заданных координат x и y (в радианах)'},
    {name: 'SIN()', message: 'Возвращает тригонометрический синус угла (в градусах)'},
    {name: 'COS()', message: 'Возвращает тригонометрический косинус угла (в градусах)'},
    {name: 'TAN()', message: 'Возвращает тригонометрические тангенс угла (в градусах)'},
    {name: 'COT()', message: 'Возвращает тригонометрический котангенс угла (в градусах)'},
    {name: 'SEC()', message: 'Возвращает секанс (в градусах)'},
    {name: 'CSC()', message: 'Возвращает косеканс (в градусах)'},
    {name: 'ASIN()', message: 'Возвращает значение арксинуса (в градусах)'},
    {name: 'ACOS()', message: 'Возвращает значение арккосинуса (в градусах)'},
    {name: 'ATAN()', message: 'Возвращает значение арктангенса (в градусах)'},
    {name: 'ACOT()', message: 'Возвращает лавное значение арккотангенса, или обратного котангенса, числа (в градусах)'},
    {name: 'ATAN2()', message: 'вращает арктангенс для заданных координат x и y'},
    {name: 'SINH()', message: 'Возвращает гиперболический синус'},
    {name: 'COSH()', message: 'Возвращает гиперболический косинус'},
    {name: 'TANH()', message: 'Возвращает гиперболический тангенс'},
    {name: 'COTH()', message: 'Возвращает гиперболический котангенс'},
    {name: 'SECH()', message: 'Возвращает гиперболический секанс (в градусах)'},
    {name: 'CSCH()', message: 'Возвращает гиперболический косеканс (в градусах)'},
    {name: 'ASINH()', message: 'Возвращает угол гиперболического синуса (в градусах)'},
    {name: 'ACOSH()', message: 'Возвращает угол гиперболического косинуса (в градусах)'},
    {name: 'ATANH()', message: 'Возвращает угол гиперболического тангенса значения'},
    {name: 'RAD()', message: 'Преобразует угол, измеренный в градусах, в приблизительно эквивалентный угол, измеренный в радианах'},
    {name: 'DEG()', message: 'Преобразует угол, измеренный в радианах, в приблизительно эквивалентный угол, измеренный в градусах'},
    {name: 'FACT()', message: 'Возвращает факториальное значение целого числа. Вернет 1 для 0 или отрицательного числа'},
    {name: 'e', message: 'Значение e с точностью до 70 цифр'},
    {name: 'PI', message: 'Значение PI с точностью до 100 цифр'},
    {name: 'TRUE', message: 'Значение один («Истина»)'},
    {name: 'FALSE', message: 'Значение ноль (Ложь»)'},
    {name: 'NULL', message: 'Значение отсутствует'},
  ]

  getMathMethods(): autocompleteData {
    return this.mathMethodsAndConstants
  }

  getOperators(): autocompleteData {
    return this.operators
  }

  getDoubleOperators(): autocompleteData {
    return this.doubleOperators
  }

}
